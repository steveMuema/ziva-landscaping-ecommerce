generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  imageUrl    String?      
  subCategories SubCategory[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model SubCategory {
  id          Int           @id @default(autoincrement())
  name        String
  categoryId  Int
  imageUrl    String?       
  category    Category      @relation(fields: [categoryId], references: [id])
  products    Product[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  price       Float
  imageUrl    String?       
  stock       Int
  subCategoryId Int
  subCategory SubCategory   @relation(fields: [subCategoryId], references: [id])
  carts       Cart[]
  wishlists   Wishlist[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  userId    String
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    String
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int
  createdAt DateTime @default(now())
}

model Order {
  id          Int      @id @default(autoincrement())
  userDetails String
  items       String
  total       Float
  status      String
  createdAt   DateTime @default(now())
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  role          String    @default("user")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}